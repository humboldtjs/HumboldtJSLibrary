<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.humboldtjs.events"><apiName>com.humboldtjs.events</apiName><apiDetail/><apiClassifier id="com.humboldtjs.events:DataEvent"><apiName>DataEvent</apiName><shortdesc>
	 A simple HJSEvent that adds a data field
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.humboldtjs.events:HJSEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A simple HJSEvent that adds a data field
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.humboldtjs.events:DataEvent:DataEvent"><apiName>DataEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aType</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>aData</apiItemName><apiType value="any"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.humboldtjs.events:DataEvent:data"><apiName>data</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.humboldtjs.events:HJSEvent"><apiName>HJSEvent</apiName><shortdesc>
	 The base HumboldtJS event class.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The base HumboldtJS event class. Any event that you send (other than
	 HTML events used in HtmlUtils) should extend HJSEvent.
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.humboldtjs.events:HJSEvent:HJSEvent"><apiName>HJSEvent</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><constructor/></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aType</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.humboldtjs.events:HJSEvent:getCancelable"><apiName>getCancelable</apiName><shortdesc>
		 Whether the event is cancelable
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Whether the event is cancelable
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:HJSEvent:getCurrentTarget"><apiName>getCurrentTarget</apiName><shortdesc>
		 The current target from which the event was sent
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.humboldtjs.events:EventDispatcher</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 The current target from which the event was sent
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:HJSEvent:getType"><apiName>getType</apiName><shortdesc>
		 The event type
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 The event type
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:HJSEvent:isDefaultPrevented"><apiName>isDefaultPrevented</apiName><shortdesc>
		 Whether preventDefault has been called on this event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Whether preventDefault has been called on this event.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:HJSEvent:preventDefault"><apiName>preventDefault</apiName><shortdesc>
		 Prevent the default processing of the event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Prevent the default processing of the event. Since these events
		 usually don't have a default, this usually does nothing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:HJSEvent:setType"><apiName>setType</apiName><shortdesc>
		 The event type
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 The event type
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:HJSEvent:stopImmediatePropagation"><apiName>stopImmediatePropagation</apiName><shortdesc>
		 Immediately stops propagating the event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Immediately stops propagating the event. The event handler that
		 called this function will be the last to get the event, and any
		 processing afterwards will be aborted.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.humboldtjs.events:HJSEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.humboldtjs.events:HJSEvent:ENTER_FRAME"><apiName>ENTER_FRAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enterFrame</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.humboldtjs.events:HJSEvent:protected:mCurrentTarget"><apiName>mCurrentTarget</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>com.humboldtjs.events:EventDispatcher</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.humboldtjs.events:HJSEvent:protected:mIsDefaultPrevented"><apiName>mIsDefaultPrevented</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.humboldtjs.events:HJSEvent:protected:mStopImmediatePropagation"><apiName>mStopImmediatePropagation</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.humboldtjs.events:HJSEvent:protected:mType"><apiName>mType</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.humboldtjs.events:EventDispatcher"><apiName>EventDispatcher</apiName><shortdesc>
	 An EventDispatcher is an object that can easily send events (HJSEvent).</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>com.humboldtjs.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An EventDispatcher is an object that can easily send events (HJSEvent).
	 Any event has a named type, and objects can register and deregister
	 themselves as listeners for events of a certain type using the
	 addEventListener and removeEventListener methods. 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.humboldtjs.events:EventDispatcher:EventDispatcher"><apiName>EventDispatcher</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><constructor/></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.humboldtjs.events:EventDispatcher:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 Add an EventFunction as a listener to events of the given type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>aType</apiItemName><apiType value="String"/><apiDesc>The type name of the event to listen for
		 </apiDesc></apiParam><apiParam><apiItemName>aFunction</apiItemName><apiType value="dom.domobjects:EventFunction"/><apiDesc>The EventFunction to call when the event is dispatched
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Add an EventFunction as a listener to events of the given type.
		 Whenever that type of event is dispatched the Eventfunction will
		 be called.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:EventDispatcher:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
		 Dispatch an event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>aEvent</apiItemName><apiOperationClassifier>com.humboldtjs.events:HJSEvent</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Dispatch an event. Every event that is dispatched must extend
		 HJSEvent. The method that receives the event must also accept an
		 HJSEvent, but ideally would receive an event of the same type that
		 was dispatched.
		 
		 The HJSEvent will contain a currentTarget (getCurrentTarget()) that
		 points towards the EventDispatcher instance that sent the message.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:EventDispatcher:hasEventListener"><apiName>hasEventListener</apiName><shortdesc>
		 Check whether the EventDispatcher has any listeners for the given
		 type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>aType</apiItemName><apiType value="String"/><apiDesc>The string name of the event type to check for
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Check whether the EventDispatcher has any listeners for the given
		 type.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:EventDispatcher:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 Remove an EventFunction as a listener to events of the given type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>aType</apiItemName><apiType value="String"/><apiDesc>The type name of the event to remove from
		 </apiDesc></apiParam><apiParam><apiItemName>aFunction</apiItemName><apiType value="dom.domobjects:EventFunction"/><apiDesc>The EventFunction to remove as listener
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove an EventFunction as a listener to events of the given type.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.humboldtjs.events:EventDispatcher:protected:mListeners"><apiName>mListeners</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.humboldtjs.events:MouseEvent"><apiName>MouseEvent</apiName><shortdesc>
	 A mouse event.</shortdesc><prolog><asMetadata/><asCustoms><TODO>this class needs to provide info about the current mouse state
	 </TODO></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.humboldtjs.events:HJSEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A mouse event.
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.humboldtjs.events:MouseEvent:MouseEvent"><apiName>MouseEvent</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><constructor/></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aType</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.humboldtjs.events:MouseEvent:CLICK"><apiName>CLICK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>click</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.humboldtjs.events:IEventDispatcher"><apiName>IEventDispatcher</apiName><shortdesc>
	 The interface for an EventDispatcher.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface for an EventDispatcher.
	 </apiDesc></apiClassifierDetail><apiOperation id="com.humboldtjs.events:IEventDispatcher:com.humboldtjs.events:IEventDispatcher:addEventListener"><apiName>addEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="dom.domobjects:EventFunction"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:IEventDispatcher:com.humboldtjs.events:IEventDispatcher:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>com.humboldtjs.events:HJSEvent</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:IEventDispatcher:com.humboldtjs.events:IEventDispatcher:hasEventListener"><apiName>hasEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.humboldtjs.events:IEventDispatcher:com.humboldtjs.events:IEventDispatcher:removeEventListener"><apiName>removeEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="dom.domobjects:EventFunction"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier></apiPackage>